@startuml

title __SRC's Class Diagram__\n

  package  {
    class Datas {
        - data : int
        ~ Datas()
        ~ Datas()
        + getData()
        + setData()
        + getNext()
        + setNext()
    }
  }
  

  package  {
    class Nodes {
        # children : Nodes[]
        # data : Datas[]
        # numData : int
        # numChildren : int
        ~ Nodes()
        ~ Nodes()
        ~ Nodes()
        ~ Nodes()
        + getChild()
        + check4Child()
        + check4Children()
        + check4AllData()
        + check4Data()
        + setChild()
        + getParent()
        + setParent()
        + getData()
        + setData1()
        + deleteData()
        + deleteChild()
        + getLengthDataArray()
        + getLengthChildrenArray()
    }
  }
  

  package  {
    abstract class Tree {
        # Root : Nodes
        # queue : myQueue
        {static} # numComparisons : int
        {static} # numTreeNode : int
        {abstract} + addNode()
        {abstract} + lookFor()
        {abstract} + nodeTraversal()
        + getRoot()
    }
  }
  

  package  {
    class TwoThree {
        {static} + leftChild : int
        {static} + middleChild : int
        {static} + rightChild : int
        {static} + firstData : int
        {static} + secondData : int
        ~ TwoThree()
        + addNode()
        {static} - findNode()
        + lookFor()
        + nodeTraversal()
        - promoteNode()
        - splitAndPromoteNodes()
        - show()
        - walk()
        {static} + main()
    }
  }
  

  package  {
    class myQueue {
        {static} - head : Datas
        {static} - tail : Datas
        - data : Datas
        ~ myQueue()
        + enqueue()
        + dequeue()
        + isEmpty()
        + emptyQueue()
    }
  }
  

  Datas o-- Datas : next
  Nodes o-- Nodes : parent


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
