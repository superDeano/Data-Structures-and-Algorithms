@startuml

title __SRC's Class Diagram__\n

  package  {
    class Datas {
        - data : int
        ~ Datas()
        ~ Datas()
        + getData()
        + setData()
    }
  }
  


  

  package  {
    class Nodes {
        # children : Nodes[]
        # data : Datas[]
        # numData : int
        # numChildren : int
        ~ Nodes()
        ~ Nodes()
        + getChild()
        + check4Child()
        + check4Children()
        + check4Data()
        + setChild()
        + getParent()
        + setParent()
        + getData()
        + setData1()
    }
  }
  

  package  {
    abstract class Tree {
        # Root : Nodes
        {abstract} + addNode()
        {abstract} + lookFor()
        {abstract} + nodeTraversal()
    }
  }
  

  package  {
    class TwoThree {
        {static} + leftChild : int
        {static} + middleChild : int
        {static} + rightChild : int
        {static} + firstData : int
        {static} + secondData : int
        ~ TwoThree()
        + addNode()
        {static} - findNode()
        + lookFor()
        + nodeTraversal()
        + promoteNode()
        {static} + main()
    }
  }
  

  Nodes o-- Nodes : parent
  Tree o-- Nodes : Root
  TwoThree -up-|> Tree


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
